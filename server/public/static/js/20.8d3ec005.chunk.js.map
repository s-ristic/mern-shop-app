{"version":3,"sources":["hooks/title-hook.js","utils/index.js","actions/order-actions.js","../../src/index.tsx","pages/PayPalPage.js"],"names":["useTitle","data","useState","title","setTitle","useEffect","document","addDecimals","num","Math","round","toFixed","localeDateTimeString","Date","toLocaleString","slice","localeDateString","toLocaleDateString","createOrder","orderData","dispatch","getState","a","type","CREATE_ORDER_REQUEST","userInfo","loginUser","config","headers","Authorization","token","axios","post","order","CREATE_ORDER_SUCCESS","payload","RESET_CART_ITEM","localStorage","removeItem","message","response","logout","CREATE_ORDER_FAIL","getOrderInfo","id","GET_ORDER_INFO_REQUEST","get","GET_ORDER_INFO_SUCCESS","GET_ORDER_INFO_FAIL","payOrder","orderId","paymentResult","PAY_ORDER_REQUEST","put","PAY_ORDER_SUCCESS","PAY_ORDER_FAIL","deliverOrder","DELIVER_ORDER_REQUEST","_id","DELIVER_ORDER_SUCCESS","DELIVER_ORDER_FAIL","getUserOrders","pageNumber","GET_USER_ORDERS_REQUEST","GET_USER_ORDERS_SUCCESS","GET_USER_ORDERS_FAIL","getAllOrders","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","PayPalButton","isSdkReady","window","this","props","actions","currency","options","amount","shippingPreference","purchase_units","currency_code","value","application_context","shipping_preference","onSuccess","createSubscription","onApprove","style","Button","React","ReactDOM","createOrderFn","undefined","onButtonReady","queryParams","Object","k","name","script","Error","Component","PropTypes","catchError","onError","clientId","merchantId","intent","commit","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug","func","PayPalPage","sdk","setSdk","useSelector","state","loadingPay","loading","successPay","success","cart","useDispatch","history","useHistory","source","CancelToken","addPayPalScript","cancelToken","createElement","src","async","onload","body","appendChild","PAY_ORDER_RESET","paypal","cancel","className","margin","maxWidth","onClick","orderItems","cartItems","shippingAddress","paymentMethod","itemsPrice","shippingPrice","totalPrice","CREATE_ORDER_RESET","push"],"mappings":"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","file":"static/js/20.8d3ec005.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport const useTitle = (data) => {\r\n  const [title, setTitle] = useState(data);\r\n\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  return [title, setTitle];\r\n};\r\n","export const addDecimals = (num) => {\r\n  return (Math.round(num * 100) / 100).toFixed(2);\r\n};\r\n\r\nexport const localeDateTimeString = (data) => {\r\n  return new Date(data).toLocaleString().slice(0, -3);\r\n};\r\n\r\nexport const localeDateString = (data) => {\r\n  return new Date(data).toLocaleDateString();\r\n};\r\n","import axios from 'axios';\r\nimport { RESET_CART_ITEM } from '../constants/cart-constants';\r\nimport {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  GET_ORDER_INFO_FAIL,\r\n  GET_ORDER_INFO_SUCCESS,\r\n  GET_ORDER_INFO_REQUEST,\r\n  PAY_ORDER_FAIL,\r\n  PAY_ORDER_SUCCESS,\r\n  PAY_ORDER_REQUEST,\r\n  GET_USER_ORDERS_REQUEST,\r\n  GET_USER_ORDERS_SUCCESS,\r\n  GET_USER_ORDERS_FAIL,\r\n  GET_ALL_ORDERS_FAIL,\r\n  GET_ALL_ORDERS_SUCCESS,\r\n  GET_ALL_ORDERS_REQUEST,\r\n  DELIVER_ORDER_FAIL,\r\n  DELIVER_ORDER_SUCCESS,\r\n  DELIVER_ORDER_REQUEST,\r\n} from '../constants/order-constants';\r\nimport { logout } from './user-actions';\r\n\r\nexport const createOrder = (orderData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CREATE_ORDER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      loginUser: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { order },\r\n    } = await axios.post(`/api/orders`, orderData, config);\r\n\r\n    dispatch({\r\n      type: CREATE_ORDER_SUCCESS,\r\n      payload: order,\r\n    });\r\n    dispatch({\r\n      type: RESET_CART_ITEM,\r\n      payload: order,\r\n    });\r\n    localStorage.removeItem('cart-items');\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'You are not authorized. Token failed.') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderInfo = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_ORDER_INFO_REQUEST,\r\n    });\r\n\r\n    const {\r\n      loginUser: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { order },\r\n    } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: GET_ORDER_INFO_SUCCESS,\r\n      payload: order,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'You are not authorized. Token failed.') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: GET_ORDER_INFO_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PAY_ORDER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      loginUser: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { order },\r\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n\r\n    dispatch({\r\n      type: PAY_ORDER_SUCCESS,\r\n      payload: order,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'You are not authorized. Token failed.') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PAY_ORDER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: DELIVER_ORDER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      loginUser: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { order },\r\n    } = await axios.put(`/api/orders/${orderData._id}/deliver`, {}, config);\r\n\r\n    dispatch({\r\n      type: DELIVER_ORDER_SUCCESS,\r\n      payload: order,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'You are not authorized. Token failed.') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: DELIVER_ORDER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserOrders =\r\n  (pageNumber = '') =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_USER_ORDERS_REQUEST,\r\n      });\r\n\r\n      const {\r\n        loginUser: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/orders/myorders/?pageNumber=${pageNumber}`, config);\r\n\r\n      dispatch({\r\n        type: GET_USER_ORDERS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message ? error.response.data.message : error.message;\r\n      if (message === 'You are not authorized. Token failed.') {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: GET_USER_ORDERS_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getAllOrders =\r\n  (pageNumber = '') =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_ALL_ORDERS_REQUEST,\r\n      });\r\n\r\n      const {\r\n        loginUser: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/orders/?pageNumber=${pageNumber}`, config);\r\n\r\n      dispatch({\r\n        type: GET_ALL_ORDERS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message ? error.response.data.message : error.message;\r\n      if (message === 'You are not authorized. Token failed.') {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: GET_ALL_ORDERS_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport Loader from '../components/UI/Loader';\r\n\r\nimport { createOrder, getOrderInfo, payOrder } from '../actions/order-actions';\r\nimport { PAY_ORDER_RESET, CREATE_ORDER_RESET } from '../constants/order-constants';\r\n\r\nimport { addDecimals } from '../utils';\r\nimport { useTitle } from '../hooks/title-hook';\r\n\r\nfunction PayPalPage() {\r\n  useTitle('MERN Shop | PayPal');\r\n  const [sdk, setSdk] = useState(false);\r\n\r\n  const { order } = useSelector((state) => state.createOrder);\r\n  const { loading: loadingPay } = useSelector((state) => state.payOrder);\r\n  const { success: successPay } = useSelector((state) => state.payOrder);\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const cancelToken = axios.CancelToken;\r\n    const source = cancelToken.source();\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal', {\r\n        cancelToken: source.token,\r\n      });\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdk(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (order || successPay) {\r\n      dispatch({ type: PAY_ORDER_RESET });\r\n      dispatch(getOrderInfo(order._id));\r\n    }\r\n\r\n    if (!window.paypal) {\r\n      addPayPalScript();\r\n    } else {\r\n      setSdk(true);\r\n    }\r\n\r\n    return () => {\r\n      source.cancel('axios request cancelled');\r\n    };\r\n  }, [dispatch, successPay, order]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(order._id, paymentResult));\r\n    dispatch({ type: CREATE_ORDER_RESET });\r\n    history.push(`/order/${order._id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-center'>Pay with:</h1>\r\n      <div style={{ margin: '10% auto 0', maxWidth: '400px' }}>\r\n        {loadingPay && <Loader />}\r\n        {!sdk ? (\r\n          <Loader />\r\n        ) : (\r\n          <PayPalButton\r\n            onClick={placeOrderHandler}\r\n            amount={addDecimals(cart.totalPrice)}\r\n            onSuccess={successPaymentHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PayPalPage;\r\n"],"sourceRoot":""}